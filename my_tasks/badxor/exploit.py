#!/usr/bin/python

from collections import Counter

with open("secret_msg.dat", 'rb') as secret_msg:
    ciphertext = secret_msg.read()

key_len = 16
key = bytearray()
for i in range(key_len):
    subciphertext = ciphertext[i::key_len]
    most_common_char = Counter(subciphertext).most_common(1)[0][0]
    # ' ' is most frequent char in long texts
    key.append(ord(most_common_char) ^ ord(' '))

msg = ''
for i, c in enumerate(ciphertext):
    msg += chr(ord(c) ^ key[i % len(key)])

print msg

"""
$ xortool ./secret_msg.dat
The most probable key lengths:
   2:   9.3%
   4:   10.7%
   6:   7.9%
   8:   15.1%
  10:   6.6%
  12:   7.6%
  16:   19.2%
  24:   7.4%
  32:   10.1%
  48:   6.2%
Key-length can be 4*n
Most possible char is needed to guess the key!

$ xortool ./secret_msg.dat -l 16 -c ' '
1 possible key(s) of length 16:
8\xa5\xd0\x89r\xf1\x8a\x90\xb1\xcfBg\x10q\x10\xb2
Found 1 plaintexts with 95.0%+ valid characters
See files filename-key.csv, filename-char_used-perc_valid.csv

$ cat ./xortool_out/0.out
...
Ok, that's enough. Here's Your flag: flag{flagflagflagflagflagflagflagflag}
"""
